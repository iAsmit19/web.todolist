{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\iamas\\\\Documents\\\\MainWorkCont\\\\Software Engineering\\\\React\\\\ReactJSYT\\\\CRUD-App\\\\To-Do-List\\\\todolist\\\\src\\\\components\\\\main.js\",\n  _s = $RefreshSig$();\nimport \"../sheets/main.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Main = () => {\n  _s();\n  const [task, setTask] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleChange = event => {\n    setNewTask(event.target.value);\n  };\n  const addTask = () => {\n    const addNewTask = [...task, newTask];\n    setTask(addNewTask);\n  };\n  const keyDownHandle = event => {\n    event.key === \"Enter\" && addTask();\n  };\n  const [doneTask, cancelDoneTask] = useState();\n  const cutTask = event => {\n    event.target.checked;\n  };\n  const checkHandle = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"takeTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add your task . . .\",\n        onChange: handleChange,\n        onKeyDown: keyDownHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showTask\",\n      children: task.map(task => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskInput\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"division\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"taskP\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: task\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"w+FAGTQRcP6fUbyXqVcGeojqus0=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Main","_s","task","setTask","newTask","setNewTask","handleChange","event","target","value","addTask","addNewTask","keyDownHandle","key","doneTask","cancelDoneTask","cutTask","checked","checkHandle","className","children","type","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c","$RefreshReg$"],"sources":["C:/Users/iamas/Documents/MainWorkCont/Software Engineering/React/ReactJSYT/CRUD-App/To-Do-List/todolist/src/components/main.js"],"sourcesContent":["import \"../sheets/main.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport const Main = () => {\r\n    const [task, setTask] = useState([]);\r\n    \r\n    const [newTask, setNewTask] = useState(\"\");\r\n    \r\n    const handleChange = (event) => {\r\n        setNewTask(event.target.value);\r\n    };\r\n    \r\n    const addTask = () => {\r\n        const addNewTask = [...task, newTask];\r\n        setTask(addNewTask);\r\n    };\r\n\r\n    const keyDownHandle = (event) => {\r\n        event.key === \"Enter\" && addTask();\r\n    };\r\n\r\n    const [doneTask, cancelDoneTask] = useState();\r\n\r\n    const cutTask = (event) => {\r\n        event.target.checked\r\n    };\r\n\r\n    const checkHandle = () => {\r\n\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"takeTask\">\r\n                <input type=\"text\" placeholder=\"Add your task . . .\" onChange={handleChange} onKeyDown={keyDownHandle} />\r\n                <button onClick={addTask}>Add</button>\r\n            </div>\r\n            <div className=\"showTask\">\r\n                {task.map((task) => {\r\n                    return (\r\n                        <div className=\"task\">\r\n                            <div className=\"taskInput\">\r\n                                <input type=\"checkbox\" />\r\n                            </div>\r\n                            <div className=\"division\">\r\n                            </div>\r\n                            <div className=\"taskP\">\r\n                                <p>{task}</p>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}